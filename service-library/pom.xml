<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <artifactId>service-library</artifactId>
    <build>
        <plugins>
            <plugin>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
                <groupId>org.springframework.boot</groupId>
            </plugin>
            <plugin>
                <artifactId>sca-maven-plugin</artifactId>
                <groupId>com.fortify.sca.plugins.maven</groupId>
                <version>20.2.0</version>
            </plugin>
            <plugin>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <id>report</id>
                    </execution>
                </executions>
                <groupId>org.jacoco</groupId>
                <version>0.8.6</version>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>generate-javadoc-json</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>javadoc-no-fork</goal>
                        </goals>
                        <configuration>
                            <doclet>capital.scalable.restdocs.jsondoclet.ExtractDocumentationAsJsonDoclet</doclet>
                            <docletArtifact>
                                <groupId>capital.scalable</groupId>
                                <artifactId>spring-auto-restdocs-json-doclet</artifactId>
                                <version>${spring.auto.restdocs.version}</version>
                            </docletArtifact>
                            <destDir>generated-javadoc-json</destDir>
                            <reportOutputDirectory>${project.build.directory}</reportOutputDirectory>
                            <useStandardDocletOptions>false</useStandardDocletOptions>
                            <show>package</show>
                            <source>11</source>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/generated-javadoc-json</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <dependency>
            <artifactId>spring-boot-starter</artifactId>
            <groupId>org.springframework.boot</groupId>
        </dependency>
        <dependency>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>spring-cloud-starter-ribbon</artifactId>
                    <groupId>org.springframework.cloud</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>ribbon-eureka</artifactId>
                    <groupId>com.netflix.ribbon</groupId>
                </exclusion>
            </exclusions>
            <groupId>org.springframework.cloud</groupId>
        </dependency>
        <dependency>
            <artifactId>spring-boot-starter-test</artifactId>
            <groupId>org.springframework.boot</groupId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <artifactId>spring-boot-starter-mail</artifactId>
            <groupId>org.springframework.boot</groupId>
        </dependency>
        <dependency>
            <artifactId>quartz</artifactId>
            <groupId>org.quartz-scheduler</groupId>
            <version>${quartz.version}</version>
        </dependency>
        <dependency>
            <artifactId>c3p0</artifactId>
            <groupId>com.mchange</groupId>
            <version>${c3p0.version}</version>
        </dependency>
        <dependency>
            <artifactId>tomcat-embed-core</artifactId>
            <groupId>org.apache.tomcat.embed</groupId>
        </dependency>
        <dependency>
            <artifactId>spring-session-core</artifactId>
            <groupId>org.springframework.session</groupId>
        </dependency>
        <dependency>
            <artifactId>spring-web</artifactId>
            <groupId>org.springframework</groupId>
        </dependency>
        <dependency>
            <artifactId>lombok</artifactId>
            <groupId>org.projectlombok</groupId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.8.3</version>
        </dependency>
        <dependency>
            <artifactId>spring-security-core</artifactId>
            <groupId>org.springframework.security</groupId>
        </dependency>
        <dependency>
            <artifactId>spring-security-oauth2-core</artifactId>
            <groupId>org.springframework.security</groupId>
        </dependency>
        <dependency>
            <artifactId>nimbus-jose-jwt</artifactId>
            <groupId>com.nimbusds</groupId>
            <version>9.5</version>
        </dependency>
        <dependency>
            <artifactId>spring-security-web</artifactId>
            <groupId>org.springframework.security</groupId>
        </dependency>
        <dependency>
            <artifactId>jakarta.persistence-api</artifactId>
            <groupId>jakarta.persistence</groupId>
        </dependency>
        <dependency>
            <artifactId>spring-data-jpa</artifactId>
            <groupId>org.springframework.data</groupId>
        </dependency>
        <dependency>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
            <groupId>org.springframework.cloud</groupId>
        </dependency>
        <dependency>
            <artifactId>spring-boot-starter-data-redis</artifactId>
            <groupId>org.springframework.boot</groupId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
        </dependency>
        <dependency>
            <artifactId>spring-session-data-redis</artifactId>
            <groupId>org.springframework.session</groupId>
        </dependency>
        <dependency>
            <artifactId>jackson-datatype-hibernate5</artifactId>
            <groupId>com.fasterxml.jackson.datatype</groupId>
        </dependency>
        <dependency>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <groupId>com.fasterxml.jackson.datatype</groupId>
        </dependency>
        <dependency>
            <artifactId>spring-cloud-starter-aws</artifactId>
            <groupId>org.springframework.cloud</groupId>
        </dependency>
        <dependency>
            <artifactId>spring-cloud-starter-aws-parameter-store-config</artifactId>
            <groupId>org.springframework.cloud</groupId>
            <version>2.2.6.RELEASE</version>
        </dependency>
        <dependency>
            <artifactId>mockito-core</artifactId>
            <groupId>org.mockito</groupId>
            <scope>compile</scope>
            <version>3.3.3</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>5.2.12.RELEASE</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <artifactId>aws-java-sdk-sqs</artifactId>
            <groupId>com.amazonaws</groupId>
            <version>1.11.976</version>
        </dependency>
        <dependency>
            <artifactId>aws-java-sdk-sns</artifactId>
            <groupId>com.amazonaws</groupId>
            <version>1.12.117</version>
        </dependency>
        <dependency>
            <groupId>org.owasp.encoder</groupId>
            <artifactId>encoder</artifactId>
            <version>1.2.3</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>capital.scalable</groupId>
            <artifactId>spring-auto-restdocs-core</artifactId>
            <version>${spring.auto.restdocs.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <artifactId>aws-java-sdk-secretsmanager</artifactId>
            <groupId>com.amazonaws</groupId>
            <version>1.11.976</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-elasticsearch</artifactId>
            <version>4.0.0.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.restdocs</groupId>
            <artifactId>spring-restdocs-mockmvc</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>1.12.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>1.12.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>mysql</artifactId>
            <version>1.12.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>elasticsearch</artifactId>
            <version>1.12.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>localstack</artifactId>
            <version>1.12.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>mockserver</artifactId>
            <version>1.12.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>3.3.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.github.openfeign</groupId>
            <artifactId>feign-httpclient</artifactId>
        </dependency>
        <dependency>
            <groupId>org.xerial.snappy</groupId>
            <artifactId>snappy-java</artifactId>
            <version>1.1.8.4</version>
        </dependency>
        <!--There is a issue to retrieve the byteSent value (display '-' most of the time).-->
        <!--Can remove the CustomLogbackValve.java once the issue fix by the logback team.-->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-access</artifactId>
            <version>1.2.5</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.5</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <artifactId>spring-cloud-dependencies</artifactId>
                <groupId>org.springframework.cloud</groupId>
                <scope>import</scope>
                <type>pom</type>
                <version>${spring-cloud.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <description>Library components for services</description>
    <groupId>onlineapp.service.library</groupId>
    <modelVersion>4.0.0</modelVersion>
    <name>service-library</name>
    <parent>
        <artifactId>spring-boot-starter-parent</artifactId>
        <groupId>org.springframework.boot</groupId>
        <relativePath/>
        <version>2.3.8.RELEASE</version> <!-- lookup parent from repository -->
    </parent>
    <properties>
        <c3p0.version>0.9.5.2</c3p0.version>
        <java.version>11</java.version>
        <quartz.version>2.3.0</quartz.version>
        <spring.auto.restdocs.version>2.0.11</spring.auto.restdocs.version>
        <sonar.coverage.exclusions>**/model/**,**/entity/*</sonar.coverage.exclusions>
        <sonar.coverage.jacoco.xmlReportPaths>
            ${project.basedir}/../test-coverage/target/site/jacoco-aggregate/jacoco.xml
        </sonar.coverage.jacoco.xmlReportPaths>
        <spring-boot.repackage.skip>true</spring-boot.repackage.skip>
        <spring-cloud.version>Hoxton.SR10</spring-cloud.version>
    </properties>

    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
        </repository>
    </repositories>
    <version>0.0.1-SNAPSHOT</version>
</project>
