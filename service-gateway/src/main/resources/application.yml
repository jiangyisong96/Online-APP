server:
  port: @server.port@
  netty:
    connection-timeout: @server.connection-timeout@
  ssl:
    key-store-type: PKCS12
    key-store: @server.ssl.key-store@
    key-store-password: @server.ssl.key-store-password@
    key-alias: @server.ssl.key-alias@
    enabled: @server.ssl.enabled@
    trust-store: @server.ssl.trust-store@
    trust-store-type: PKCS12
    trust-store-password: @server.ssl.trust-store-password@
    client-auth: none
spring:
  cloud:
    loadbalancer:
      ribbon:
        enabled: false
    gateway:
      discovery:
        locator:
          enabled: true
          service-id: registry-service
      routes:
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/user/api/**
          filters:
            - RewritePath=/user/api(?<segment>/?.*), $\{segment}
        - id: candidate-service
          uri: lb://candidate-service
          predicates:
            - Path=/candidate/api/**
          filters:
            - RewritePath=/candidate/api(?<segment>/?.*), $\{segment}
        - id: configuration-service
          uri: lb://configuration-service
          predicates:
            - Path=/configuration/api/**
          filters:
            - RewritePath=/configuration/api(?<segment>/?.*), $\{segment}
        - id: document-service
          uri: lb://document-service
          predicates:
            - Path=/document/api/**
          filters:
            - RewritePath=/document/api(?<segment>/?.*), $\{segment}
        - id: financial-service
          uri: lb://financial-service
          predicates:
            - Path=/financial/api/**
          filters:
            - RewritePath=/financial/api(?<segment>/?.*), $\{segment}
        - id: personnel-service
          uri: lb://personnel-service
          predicates:
            - Path=/personnel/api/**
          filters:
            - RewritePath=/personnel/api(?<segment>/?.*), $\{segment}
      filter:
        request-rate-limiter:
          deny-empty-key: false
          enabled: true
      default-filters:
        - name: RequestRateLimiter
          args:
            redis-rate-limiter.replenishRate: @rate-limiter.replenishRate@
            redis-rate-limiter.burstCapacity: @rate-limiter.burstCapacity@
            redis-rate-limiter.requestedTokens: 1
  session:
    redis:
      namespace: seab:session
  redis:
    host: @spring.redis.host@
    port: 6379
    ssl: @spring.redis.ssl@
    configuration:
      secure: true

management:
  health:
    mail:
      enabled: false
  endpoint:
    shutdown:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "health,scheduledtasks,shutdown"

internal:
  jwt:
    token:
      secret-key: @internal.jwt.token.secret.key@

cookie:
  config:
    secure:
      cookie: @cookie.config.secure.cookie@
    http-only: true
    cookie-name: JWTSESSION
    cookie-path: /

logging:
  level:
    com:
      ufinity:
        seab:
          service: @logging.level.application@